# npm i immer
불변성 지켜주기 위해 필수템 코드정리 react에서 가능 hook버전 따로있음

# npm i faker
더미데이터 라이브러리, 가짜 닉네임 만들거나 할때

#npm i shorid
더미데이터 아이디 생성

### back

node는 서버가 아니다 런타임으로 js코드가 돌아갈수있게하는 것
node자체가 서버가 아니라 노드에서 제공하는 안의 http 모듈이 서버

주소창은 무조거 get
post, delete 테스트시 postman

!! 노드쪽에서는 아직 import export 잘안쓰고
const  =  require

front도 노드가 돌려서 웹팩이라는게 들어있어서 import export를 내부적으로 require로 바꿔주는데
노드는 웹팩이 없음

## mysql 시퀄라이즈 연결 ( docker 쓸거에요 )
docker run -p 3306:3306 --name mylog -e MYSQL_ROOT_PASSWORD=1234 -e MYSQL_DATABASE=mylog -e MYSQL_USER=eastzoo -e MYSQL_PASSWORD=1234 -d mysql

# npm i sequelize sequelize-cli mysql2
mysql2 = node랑 mysql연결해주는 드라이버

/*
app.get -> 가져오다
app.post -> 생성하다
app.put -> 전체 수정( 통째로 덮어씌우는거 잘 안씀 )
app.delete -> 제거
app.patch -> 부분 수정(닉네임만 수정 등,,)
app.options -> 찔러보기
app.head -> 헤더만 가져오기(헤더/바디)
*/

# npx sequelize init

sequelize에서 table === models

db.User.belongsToMany(db.User, { through: 'Follow', as: 'Followers', foreignKey: 'FollowingId' });
User와 User table 관계에서 Follower, Follwing 테이블을 생성할때 외래키로 UserId 중복되니까 foreignKey: 'FollowingId' 설정

db.User.belongsToMany(db.Post, { through: 'Like', as: 'Liked' });
테이블이 다르기때문에 외래키 이름 설정 필요 x
PostId, UserId

## 서버 실행전 npx sequelize db:create

!!시퀄라이즈 생성 문법 class로 바꿈


## npm i passport passport-local
아이디 로그인 관리

## 로그인시  session , cookie
서버쪽에서 통째로 로그인 데이터 들고 있고 = 세션
프론트에서 랜덤한 문자열 = 쿠키

but passport에서 세션들고있으면 데이터가 엄청 커진다

해결법 -> passport에서 아이디만 들고있자( 쿠키와 데이터베이스 id 매칭 )

브라우저에서 쿠키 보내주면 디비로가서 데이터 복구
나중에는 아예 세션 저장용 DB redis 사용

# 브라우저(3060)---프론트서버(next)(3060)---백엔드 서버(express)(3065)

3060 , 3065 도메인이 다르면 쿠키가 전달이 안된다, 쿠키가 전달이안되면
백엔드서버는 요청을 누가 보냈는지 알 방법이 없다,

해결법
-> 프록시 or CORS모듈 참고


# SSR Start!!
next에서 SSR렌더링 메서드를 4가지 제공하지만 Redux와 같이 사용할 때 문제가 있기에
Next-Redux Wrapper 에서 제공하는 메서드로 구현하는게 나음

getStaticProps : 언제 접속해도 바뀔리 없는 데이터일때( 블로그 계시글처럼 잘 바뀌지 않는 얘들 ), NEXT 빌드시 HTML과 같은 정적인 파일로 뽑아줌!!
getServerSideProps : 접속하는 상황에따라 화면이 바껴야하면 < -- 거의 이거만 씀

### 다이나믹 라우팅( NEXT 9 ~ )
[id].js 꼴 동적 dns?www

### CSS SSR

npm i babel-plugin-styled-components

{
  "presets": [
    "next/babel"
  ],
  "plugins": [
    [
      "babel-plugin-styled-components",
      {
        "ssr": true,
        "displayName": true
      }
    ]
  ]
}

displayname : dev mode에서 <form class="ant-form ant-form-horizontal sc-kDTinF fJycNs">와 같은 외계어들 컴포넌트 이름으로 바꿔줌!
